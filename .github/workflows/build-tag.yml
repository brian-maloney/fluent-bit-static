name: Build Tag

on: 
  schedule:
    - cron: '50 5 * * *'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'     
        required: false

jobs:
  keepalive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Repository keepalive
        uses: gautamkrishnar/keepalive-workflow@1.0.10
        with:
          committer_email: gkr@vond.net

  select-tag:
    runs-on: ubuntu-latest
    outputs:
      build-tag: ${{ format('{0}{1}', steps.find-latest.outputs.release, github.event.inputs.tag) }}
    steps:
      - name: Find latest release
        if: ${{ !(github.event.inputs.tag) }}
        id: find-latest
        uses: brian-maloney/actions-github-release@use-state-env
        env:
          repository: "fluent/fluent-bit"
          type: "stable"
          token: ${{secrets.GITHUB_TOKEN}}

  check-release:
    runs-on: ubuntu-latest
    needs: select-tag
    outputs:
      outcome: failure
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Check if release exists
        id: exists
        continue-on-error: true
        uses: cardinalby/git-get-release-action@1.2.4
        with:
          tag: ${{ needs.select-tag.outputs.build-tag }}

  build:
    name: Build ${{ matrix.arch.name }} images
    runs-on: ${{ matrix.arch.runs_on }}
    needs: [ select-tag, check-release ]
    if: ${{ needs.check-release.outputs.outcome == 'failure' }}
    strategy:
      matrix:
        arch:
          - name: i386
            runs_on: ubuntu-24.04
            platform: "linux/386"
          - name: amd64
            runs_on: ubuntu-24.04
            platform: "linux/amd64"
          - name: armv7
            runs_on: ubuntu-24.04-arm
            platform: "linux/arm/v7"
          - name: arm64
            runs_on: ubuntu-24.04-arm
            platform: "linux/arm64"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        run: |
          docker buildx build . --file Dockerfile --platform '${{ matrix.arch.platform }}' --pull \
            --build-arg TAG="${{ needs.select-tag.outputs.build-tag }}" \
            -t "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-${{ matrix.arch.name }}" --push

  publish-release:
    runs-on: ubuntu-latest
    needs: [ select-tag, build ]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-architecture Docker image
        run: |
          docker manifest create "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}" \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-i386 \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-amd64 \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-armv7 \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-arm64
          docker manifest annotate "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}" \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-i386 --os linux --arch 386
          docker manifest annotate "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}" \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-amd64 --os linux --arch amd64
          docker manifest annotate "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}" \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-armv7 --os linux --arch arm --variant v7
          docker manifest annotate "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}" \
            ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}-arm64 --os linux --arch arm64
          docker manifest push "ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}"

      - name: Extract binaries
        run: |
          tag="ghcr.io/${{ github.repository }}:${{ needs.select-tag.outputs.build-tag }}"
          for digest in $(docker manifest inspect "$tag" | jq -r '.manifests[].digest'); do
            docker pull "$tag@$digest"
            bash extract-fb-bin.sh "$tag@$digest"
          done

      - name: Prepare release body
        run: |
          cd /tmp/fb-bins
          md5sum fluent* > MD5SUMS
          sha1sum fluent* > SHA1SUMS
          sha256sum fluent* > SHA256SUMS
          curl -s "https://api.github.com/repos/fluent/fluent-bit/releases" \
            | jq -r '.[] | select(.tag_name == "${{ needs.select-tag.outputs.build-tag }}") | .body' \
            > /tmp/body.md
          echo "" >> /tmp/body.md
          echo "Binary SHA1 sums:" >> /tmp/body.md
          echo '```' >> /tmp/body.md
          cat SHA1SUMS >> /tmp/body.md
          echo '```' >> /tmp/body.md
          cat /tmp/body.md
